/* tslint:disable */
/* eslint-disable */
/**
 * Glyphd: GPU Market API
 * API service exposing enriched GPU listingsmodel metadata, scoring reports, and insight overlays from the glyphsieve pipeline.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Data Transfer Object for row-level error information.
 * 
 * Represents detailed error information for a specific row that failed validation.
 * @export
 * @interface RowErrorDTO
 */
export interface RowErrorDTO {
    /**
     * Zero-based index of the row in the input
     * @type {number}
     * @memberof RowErrorDTO
     */
    rowIndex: number;
    /**
     * Original row data that failed validation
     * @type {{ [key: string]: any; }}
     * @memberof RowErrorDTO
     */
    rowData: { [key: string]: any; };
    /**
     * List of specific validation errors for this row
     * @type {Array<string>}
     * @memberof RowErrorDTO
     */
    errors: Array<string>;
    /**
     * Field-specific error messages
     * @type {{ [key: string]: string; }}
     * @memberof RowErrorDTO
     */
    fieldErrors?: { [key: string]: string; };
}

/**
 * Check if a given object implements the RowErrorDTO interface.
 */
export function instanceOfRowErrorDTO(value: object): value is RowErrorDTO {
    if (!('rowIndex' in value) || value['rowIndex'] === undefined) return false;
    if (!('rowData' in value) || value['rowData'] === undefined) return false;
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function RowErrorDTOFromJSON(json: any): RowErrorDTO {
    return RowErrorDTOFromJSONTyped(json, false);
}

export function RowErrorDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RowErrorDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'rowIndex': json['row_index'],
        'rowData': json['row_data'],
        'errors': json['errors'],
        'fieldErrors': json['field_errors'] == null ? undefined : json['field_errors'],
    };
}

export function RowErrorDTOToJSON(json: any): RowErrorDTO {
    return RowErrorDTOToJSONTyped(json, false);
}

export function RowErrorDTOToJSONTyped(value?: RowErrorDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'row_index': value['rowIndex'],
        'row_data': value['rowData'],
        'errors': value['errors'],
        'field_errors': value['fieldErrors'],
    };
}

