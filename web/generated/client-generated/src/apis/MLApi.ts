/* tslint:disable */
/* eslint-disable */
/**
 * Glyphd: GPU Market API
 * API service exposing enriched GPU listingsmodel metadata, scoring reports, and insight overlays from the glyphsieve pipeline.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  MLPredictionRequest,
  MLPredictionResponse,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    MLPredictionRequestFromJSON,
    MLPredictionRequestToJSON,
    MLPredictionResponseFromJSON,
    MLPredictionResponseToJSON,
} from '../models/index';

export interface PredictGpuClassificationApiMlIsGpuPostRequest {
    mLPredictionRequest: MLPredictionRequest;
}

/**
 * 
 */
export class MLApi extends runtime.BaseAPI {

    /**
     * Classify whether a listing title represents an NVIDIA GPU using ML model
     * GPU Classification Prediction
     */
    async predictGpuClassificationApiMlIsGpuPostRaw(requestParameters: PredictGpuClassificationApiMlIsGpuPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MLPredictionResponse>> {
        if (requestParameters['mLPredictionRequest'] == null) {
            throw new runtime.RequiredError(
                'mLPredictionRequest',
                'Required parameter "mLPredictionRequest" was null or undefined when calling predictGpuClassificationApiMlIsGpuPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/ml/is-gpu`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MLPredictionRequestToJSON(requestParameters['mLPredictionRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MLPredictionResponseFromJSON(jsonValue));
    }

    /**
     * Classify whether a listing title represents an NVIDIA GPU using ML model
     * GPU Classification Prediction
     */
    async predictGpuClassificationApiMlIsGpuPost(requestParameters: PredictGpuClassificationApiMlIsGpuPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MLPredictionResponse> {
        const response = await this.predictGpuClassificationApiMlIsGpuPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
