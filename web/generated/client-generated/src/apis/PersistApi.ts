/* tslint:disable */
/* eslint-disable */
/**
 * Glyphd: GPU Market API
 * API service exposing enriched GPU listingsmodel metadata, scoring reports, and insight overlays from the glyphsieve pipeline.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GPUListingDTO,
  HTTPValidationError,
  ImportResultDTO,
} from '../models/index';
import {
    GPUListingDTOFromJSON,
    GPUListingDTOToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    ImportResultDTOFromJSON,
    ImportResultDTOToJSON,
} from '../models/index';

export interface ImportListingsApiPersistListingsPostRequest {
    gPUListingDTO: Array<GPUListingDTO>;
}

/**
 * 
 */
export class PersistApi extends runtime.BaseAPI {

    /**
     * Import a batch of scored GPU listings into the SQLite database
     * Import GPU listings into SQLite store
     */
    async importListingsApiPersistListingsPostRaw(requestParameters: ImportListingsApiPersistListingsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ImportResultDTO>> {
        if (requestParameters['gPUListingDTO'] == null) {
            throw new runtime.RequiredError(
                'gPUListingDTO',
                'Required parameter "gPUListingDTO" was null or undefined when calling importListingsApiPersistListingsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/persist/listings`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['gPUListingDTO']!.map(GPUListingDTOToJSON),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ImportResultDTOFromJSON(jsonValue));
    }

    /**
     * Import a batch of scored GPU listings into the SQLite database
     * Import GPU listings into SQLite store
     */
    async importListingsApiPersistListingsPost(requestParameters: ImportListingsApiPersistListingsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ImportResultDTO> {
        const response = await this.importListingsApiPersistListingsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
